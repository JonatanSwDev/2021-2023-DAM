<?xml version='1.0' encoding='UTF-8'?>
<relacionsql numrelacion="R7.4">
	<configdb>
		<hostdb>localhost</hostdb>
		<esquemadb>empleados</esquemadb>
		<usuariodb>empleados</usuariodb>
		<passdb>empleados</passdb>
	</configdb>
	<student>
		<alumno>GOMEZ GARCIA JONATAN</alumno>
		<finalgrade>0</finalgrade>
		<totalgrade>0</totalgrade>
		<maxgrade>0</maxgrade>
	</student>
	<consultas>
		<query id="1" peso="1">
			<descq>Devuelve un listado con los datos de empleados y los datos de los departamentos donde trabaja cada uno.
			El codigo de empleado renombralo como cod_emp</descq>
			<resppropo>
			select empleado.codigo as cod_emp, nif, empleado.nombre, apellido1, apellido2, codigo_departamento, departamento.*
			from empleado, departamento
            where codigo_departamento = departamento.codigo;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="2" peso="1">
			<descq>Devuelve un listado con los datos de empleados y los datos de los departamentos donde trabaja cada uno.
			El codigo de empleado renombralo como cod_emp. Ordena el resultado, en primer lugar por el nombre del departamento
			(en orden alfabético) y en segundo lugar por los apellidos y el nombre de los empleados.
			</descq>
			<resppropo>
			select empleado.codigo as cod_emp, nif, empleado.nombre, apellido1, apellido2, codigo_departamento, departamento.*
			from empleado, departamento
            where codigo_departamento = departamento.codigo
            order by departamento.nombre, apellido1, apellido2, empleado.nombre asc;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="3" peso="2">
			<descq>Devuelve un listado con el código y el nombre del departamento, solamente de aquellos departamentos que tienen empleados.</descq>
			<resppropo>
			select departamento.codigo, departamento.nombre
			from departamento
            inner join empleado on codigo_departamento = departamento.codigo;
			<!-- Si quieremos eliminar los campos duplicados en el resultado de la consulta:
			select distinct(departamento.codigo), departamento.nombre
			from departamento
            inner join empleado on codigo_departamento = departamento.codigo; -->
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="4" peso="2">
			<descq>Devuelve un listado con el código, el nombre del departamento y el valor del presupuesto actual del que dispone,
			solamente de aquellos departamentos que tienen empleados. El valor del presupuesto actual lo puede calcular restando al valor del
			presupuesto inicial (columna presupuesto) el valor de los gastos que ha generado (columna gastos). La comlumna de presupuetso actual se
			llamará PRESU_ACTUAL</descq>
			<resppropo>
			select departamento.codigo, departamento.nombre, (presupuesto - gastos) as PRESU_ACTUAL
			from departamento
            inner join empleado on codigo_departamento = departamento.codigo;
			<!-- Si quieremos eliminar los campos duplicados en el resultado de la consulta:
			select distinct(departamento.codigo), departamento.nombre, (presupuesto - gastos) as PRESU_ACTUAL
			from departamento
            inner join empleado on codigo_departamento = departamento.codigo; -->
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="5" peso="2">
			<descq>Devuelve el nombre del departamento donde trabaja el empleado que tiene el nif 38382980M.</descq>
			<resppropo>
			select departamento.nombre
			from departamento
            inner join empleado on codigo_departamento = departamento.codigo
            where nif = "38382980M";
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="6" peso="3">
			<descq>Devuelve el nombre del departamento donde trabaja el empleado Pepe Ruiz Santana</descq>
			<resppropo>
			select departamento.nombre
			from departamento
            inner join empleado on codigo_departamento = departamento.codigo
            where empleado.nombre = "Pepe"
			and apellido1 = "Ruiz"
			and apellido2 = "Santana";
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="7" peso="2">
			<descq>Devuelve un listado con los datos de los empleados que trabajan en el departamento de I+D. Ordena el resultado alfabéticamente.</descq>
			<resppropo>
			select empleado.*
			from empleado
            inner join departamento on codigo_departamento = departamento.codigo
            where departamento.nombre = "I+D";
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="8" peso="3">
			<descq>Devuelve un listado con los datos de los empleados que trabajan en el departamento de Sistemas, Contabilidad o I+D.
			Ordena el resultado alfabéticamente.</descq>
			<resppropo>
			select empleado.*
			from empleado
            inner join departamento on codigo_departamento = departamento.codigo
            where departamento.nombre in ("I+D", "Sistemas", "Contabilidad")
            order by apellido1, apellido2, empleado.nombre asc;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="9" peso="2">
			<descq>Devuelve una lista con el nombre de los empleados que tienen los departamentos que no tienen un presupuesto entre 100000 y 200000 euros</descq>
			<resppropo>
			select empleado.nombre
			from empleado
            inner join departamento on codigo_departamento = departamento.codigo
            where presupuesto between 100000 and 200000;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="10" peso="2">
			<descq>Devuelve un listado con el nombre de los departamentos donde existe algún empleado cuyo segundo apellido sea NULL.
			Tenga en cuenta que no debe mostrar nombres de departamentos que estén repetidos.</descq>
			<resppropo>
			select distinct(departamento.nombre)
			from departamento
            inner join empleado on codigo_departamento = departamento.codigo
            where apellido2 is null;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="11" peso="2">
			<descq>Calcula la suma del presupuesto de todos los departamentos renombrado a TOTPRESU.</descq>
			<resppropo>
			select sum(presupuesto) as TOTPRESU
			from departamento;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="12" peso="2">
			<descq>
				Calcula la media del presupuesto de todos los departamentos renombrado a MEDPRESU.
			</descq>
			<resppropo>
			select AVG(presupuesto) as MEDPRESU
			from departamento;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
			</query>
		<query id="13" peso="1">
			<descq>Calcula el valor mínimo del presupuesto de todos los departamentos renombrado a MINPRESU.</descq>
			<resppropo>
			select min(presupuesto) as MINPRESU
			from departamento;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="14" peso="2">
			<descq>Calcula el nombre del departamento y el presupuesto que tiene asignado, del departamento con menor presupuesto.</descq>
			<resppropo>
			select nombre, presupuesto
			from departamento
            order by presupuesto asc
            limit 1;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="15" peso="2">
			<descq>Calcula el valor máximo del presupuesto de todos los departamentos renombrado a MAXPRESU.</descq>
			<resppropo>
			select max(presupuesto) as MAXPRESU
			from departamento;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="16" peso="2">
			<descq>Calcula el nombre del departamento y el presupuesto que tiene asignado, del departamento con mayor presupuesto</descq>
			<resppropo>
			select nombre, presupuesto
			from departamento
            order by presupuesto desc
            limit 1;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="17" peso="2">
			<descq>Calcula el número total de empleados que hay en la tabla empleado renombrado a NUMEMP.</descq>
			<resppropo>
			select count(*) as NUMEMP
			from empleado;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="18" peso="2">
			<descq>Calcula el número de empleados que no tienen NULL en su segundo apellido renombrado a NUMEMPCOMP.</descq>
			<resppropo>
			select count(*) as NUMEMPCOMP
			from empleado
            where apellido2 is not null;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="19" peso="3">
			<descq>Calcula el número de empleados que hay en cada departamento.
			Tienes que devolver dos columnas, una con el nombre del departamento y otra con el número de empleados que tiene asignados,
			renombrada esta última a NUMEMP.</descq>
			<resppropo>
			select departamento.nombre, count(empleado.codigo) as NUMEMP
			from empleado
            inner join departamento on codigo_departamento = departamento.codigo
            group by departamento.nombre;
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="20" peso="3">
			<descq>Calcula el nombre de los departamentos que tienen más de 2 empleados.
			El resultado debe tener dos columnas, una con el nombre del departamento y otra con el número de empleados que tiene asignados
			renombrada esta última a NUMEMP</descq>
			<resppropo>
			<![CDATA[ select departamento.nombre, count(empleado.codigo) as NUMEMP
			from empleado
            inner join departamento on codigo_departamento = departamento.codigo
            group by departamento.nombre
            having NUMEMP > 2; ]]>
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
		<query id="21" peso="2">
			<descq>Calcula el número de empleados que trabajan en cada unos de los departamentos que tienen un presupuesto mayor a 200000 euros.
			Muestra dos columnas una con el código de departamento y otra con el número de empleados renombrada a NUMEMP</descq>
			<resppropo>
			<![CDATA[ select departamento.codigo, count(empleado.codigo) as NUMEMP
			from empleado
            inner join departamento on codigo_departamento = departamento.codigo
            where presupuesto > 200000
            group by departamento.codigo; ]]>
			</resppropo>
			<respcorr>
			</respcorr>
			<gradeq></gradeq>
			<feedback></feedback>
		</query>
	</consultas> 
</relacionsql>